======
Slurry
======

.. image:: https://readthedocs.org/projects/slurry/badge/?version=latest
   :target: https://slurry.readthedocs.io/en/latest/?badge=latest
   :alt: Documentation Status

.. image:: https://img.shields.io/pypi/v/slurry.svg
   :target: https://pypi.org/project/slurry
   :alt: Latest PyPi version

.. image:: https://travis-ci.com/andersea/slurry.svg?branch=master
   :target: https://travis-ci.com/andersea/slurry
   :alt: Build Status

An async stream processing microframework

Introduction
------------

Slurry_ builds on the concept of memory channels and structured concurrency, originating in
Trio_, to create a microframework for processing streaming data.

The basic building blocks of Slurry, includes:

- **Pipelines** - An asynchronous context manager which encapsulates a stream process.
- **Sections** - The individual processing steps.
- **Taps** - Output channels for the processed stream.
- **Extensions** - A way to add more processing steps to an existing pipeline.

Slurry avoids using asynchronous generator functions, in favor of the pull-push programming style
of memory channels. It can be thought of as an asynchronous version of itertools_ - on steroids!

Included in the basic library are a number of basic stream processing building blocks, like
``Map``, ``Chain``, ``Merge`` and ``Zip``, and it is easy to build your own!
